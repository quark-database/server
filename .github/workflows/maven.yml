# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

permissions:
  checks: write
  contents: write

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'oracle'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Test with Maven
        run: mvn -B test --file pom.xml

      - name: JUnit Report Action
        uses: mikepenz/action-junit-report@v4.1.0

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          generate-branches-badge: true
          jacoco-csv-file: build/site/jacoco-ut/jacoco.csv

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: Commit the badge (if it changed)
        run: |
          if [[ `git status --porcelain` ]]; then
            git config --global user.name 'anafro'
            git config --global user.email 'anafro@users.noreply.github.com'
            git add -A
            git commit -m "Update the coverage badge"
            git push
          fi

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/site/jacoco/
      
      - name: Generate Quark documentation
        run: python generate_docs.py
        
      - name: Update Quark documentation in README.md
        run: |
          git config --global user.name 'anafro'
          git config --global user.email 'anafro@users.noreply.github.com'
          git add -A
          git commit -m "Update Quark documentation"
          git push